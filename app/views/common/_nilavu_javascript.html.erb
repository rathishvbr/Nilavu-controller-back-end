<script>
  Ember.RSVP.configure('onerror', function(e) {
    // Ignore TransitionAborted exceptions that bubble up
    if (e && e.message === "TransitionAborted") { return; }

    <% if Rails.env.development? %>
      if (e) {
        if (e.message || e.stack) {
          console.log(e.message);
          console.log(e.stack);
        } else {
          console.log("Uncaught promise: ", e);
        }
      } else {
        console.log("A promise failed but was not caught.");
      }
    <% end %>
    window.onerror(e && e.message, null,null,null,e);
  });

<% if Rails.env.development? || Rails.env.test? %>
  //Ember.ENV.RAISE_ON_DEPRECATION = true
  //Ember.LOG_STACKTRACE_ON_DEPRECATION = true
<% end %>

</script>

<script>
  <%- if !current_user && flash[:authentication_data] %>
    require('nilavu/routes/application').default.reopen({
      actions: {
        didTransition: function() {
          Em.run.next(function(){
            Nilavu.authenticationComplete(<%=flash[:authentication_data].html_safe%>);
          });
          return this._super();
        }
      }
    });
  <%- end %>

  (function() {
    var ps = require('preload-store').default;

    Nilavu.CDN = '<%= Rails.configuration.action_controller.asset_host %>';
    Nilavu.BaseUri = '<%= Nilavu::base_uri %>';
    Nilavu.Environment = '<%= Rails.env %>';
    Nilavu.VncServer = '<%= GlobalSetting.vnc_server %>'
    Nilavu.LogServer = '<%= GlobalSetting.log_server %>'
    Nilavu.ShellServer = '<%= GlobalSetting.shell_server %>'
    Nilavu.SiteSettings = ps.get('siteSettings');
    I18n.defaultLocale = '<%= SiteSetting.default_locale %>';
    Nilavu.start();
    Nilavu.set('assetVersion','<%= Nilavu.assets_digest %>');
  })();
</script>

<%= script 'browser-update' %>
